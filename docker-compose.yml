version: "3.9"

name: ledger-service

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ledger-service
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_NAME: ${POSTGRES_DB}
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - ledger-network

  migrator:
    image: node:22-alpine
    container_name: ledger-service-migrate
    working_dir: /app
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_NAME: ${POSTGRES_DB}
      NODE_ENV: development
    volumes:
      - .:/app
    command: sh -c "npm install && npm run migrate:apply"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ledger-network

  db:
    image: postgres:17-alpine
    container_name: ledger-service-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./database/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ledger-network
networks:
  ledger-network:
    driver: bridge
